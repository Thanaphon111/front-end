{"ast":null,"code":"export async function getAllMovies(bearer_token) {\n  var bearer_token = '1234567890';\n  try {\n    const response = await fetch('http://api.se-rmutl.net/api/movie/all');\n    return await response.json();\n  } catch (error) {\n    return [];\n  }\n}\nexport async function createMovie(data) {\n  const response = await fetch(`http://api.se-rmutl.net/api/movie/insert`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ...data\n    })\n  });\n  return await response.json();\n}\nconst handleSearch = async () => {\n  try {\n    const response = await fetch(`http://localhost:4000/api/movie/search?search_text=${searchText}`);\n    const data = await response.json();\n    if (data.returnCode === 1) {\n      setSearchResults(data.data);\n      setIsSearching(true);\n    } else {\n      setSearchResults([]);\n      setIsSearching(false);\n    }\n  } catch (error) {\n    console.error('Error searching for movies:', error);\n  }\n};","map":{"version":3,"names":["getAllMovies","bearer_token","response","fetch","json","error","createMovie","data","method","headers","body","JSON","stringify","handleSearch","searchText","returnCode","setSearchResults","setIsSearching","console"],"sources":["/Users/admin/ENGSE203/first-development/my-app/src/services/MovieService.js"],"sourcesContent":["export async function getAllMovies(bearer_token) {\n    var bearer_token = '1234567890';\n\n    try{\n        const response = await fetch('http://api.se-rmutl.net/api/movie/all');\n        \n        return await response.json();\n    }catch(error) {\n        return [];\n    }\n    \n}\n\nexport async function createMovie(data) {\n    const response = await fetch(`http://api.se-rmutl.net/api/movie/insert`, {\n        method: 'POST',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify({...data})\n      })\n    return await response.json();\n}\nconst handleSearch = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/movie/search?search_text=${searchText}`);\n      const data = await response.json();\n\n      if (data.returnCode === 1) {\n        setSearchResults(data.data);\n        setIsSearching(true);\n      } else {\n        setSearchResults([]);\n        setIsSearching(false);\n      }\n    } catch (error) {\n      console.error('Error searching for movies:', error);\n    }\n  };"],"mappings":"AAAA,OAAO,eAAeA,YAAYA,CAACC,YAAY,EAAE;EAC7C,IAAIA,YAAY,GAAG,YAAY;EAE/B,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;IAErE,OAAO,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC,CAAC,QAAMC,KAAK,EAAE;IACV,OAAO,EAAE;EACb;AAEJ;AAEA,OAAO,eAAeC,WAAWA,CAACC,IAAI,EAAE;EACpC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyC,EAAE;IACrEK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAC,GAAGL;IAAI,CAAC;EAChC,CAAC,CAAC;EACJ,OAAO,MAAML,QAAQ,CAACE,IAAI,CAAC,CAAC;AAChC;AACA,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,sDAAqDW,UAAW,EAAC,CAAC;IAChG,MAAMP,IAAI,GAAG,MAAML,QAAQ,CAACE,IAAI,CAAC,CAAC;IAElC,IAAIG,IAAI,CAACQ,UAAU,KAAK,CAAC,EAAE;MACzBC,gBAAgB,CAACT,IAAI,CAACA,IAAI,CAAC;MAC3BU,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLD,gBAAgB,CAAC,EAAE,CAAC;MACpBC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACda,OAAO,CAACb,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC"},"metadata":{},"sourceType":"module"}